{"ast":null,"code":"exports.registerUser = async (req, res) => {\n  const {\n    name,\n    email,\n    password\n  } = req.body;\n  console.log(\"Incoming request body:\", req.body); // Log the incoming data\n\n  try {\n    if (!name || !email || !password) {\n      return res.status(400).json({\n        success: false,\n        message: \"All fields are required\"\n      });\n    }\n    if (password.length < 6) {\n      return res.status(400).json({\n        success: false,\n        message: \"Password must be at least 6 characters long\"\n      });\n    }\n    const userExists = await User.findOne({\n      email\n    });\n    if (userExists) {\n      console.log(\"User already exists with email:\", email); // Log duplicate email\n      return res.status(400).json({\n        success: false,\n        message: \"User already exists\"\n      });\n    }\n    const user = await User.create({\n      name,\n      email,\n      password\n    });\n    console.log(\"User created successfully:\", user); // Log successful user creation\n\n    res.status(201).json({\n      success: true,\n      user: {\n        _id: user.id,\n        name: user.name,\n        email: user.email,\n        isAdmin: user.isAdmin\n      },\n      token: generateToken(user._id)\n    });\n  } catch (err) {\n    console.error(\"Error during registration:\", err); // Log the full error object\n    res.status(500).json({\n      success: false,\n      message: \"Server error\",\n      error: err.message\n    });\n  }\n};","map":{"version":3,"names":["exports","registerUser","req","res","name","email","password","body","console","log","status","json","success","message","length","userExists","User","findOne","user","create","_id","id","isAdmin","token","generateToken","err","error"],"sources":["C:/Users/Vaibhav.Sunkaria/frozen-food-business/frontend/src/pages/Register.js"],"sourcesContent":["exports.registerUser = async (req, res) => {\r\n    const { name, email, password } = req.body;\r\n\r\n    console.log(\"Incoming request body:\", req.body); // Log the incoming data\r\n\r\n    try {\r\n        if (!name || !email || !password) {\r\n            return res\r\n                .status(400)\r\n                .json({ success: false, message: \"All fields are required\" });\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            return res\r\n                .status(400)\r\n                .json({ success: false, message: \"Password must be at least 6 characters long\" });\r\n        }\r\n\r\n        const userExists = await User.findOne({ email });\r\n        if (userExists) {\r\n            console.log(\"User already exists with email:\", email); // Log duplicate email\r\n            return res.status(400).json({ success: false, message: \"User already exists\" });\r\n        }\r\n\r\n        const user = await User.create({ name, email, password });\r\n        console.log(\"User created successfully:\", user); // Log successful user creation\r\n\r\n        res.status(201).json({\r\n            success: true,\r\n            user: {\r\n                _id: user.id,\r\n                name: user.name,\r\n                email: user.email,\r\n                isAdmin: user.isAdmin,\r\n            },\r\n            token: generateToken(user._id),\r\n        });\r\n    } catch (err) {\r\n        console.error(\"Error during registration:\", err); // Log the full error object\r\n        res.status(500).json({ success: false, message: \"Server error\", error: err.message });\r\n    }\r\n};\r\n"],"mappings":"AAAAA,OAAO,CAACC,YAAY,GAAG,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACvC,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGJ,GAAG,CAACK,IAAI;EAE1CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEP,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC;;EAEjD,IAAI;IACA,IAAI,CAACH,IAAI,IAAI,CAACC,KAAK,IAAI,CAACC,QAAQ,EAAE;MAC9B,OAAOH,GAAG,CACLO,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAA0B,CAAC,CAAC;IACrE;IAEA,IAAIP,QAAQ,CAACQ,MAAM,GAAG,CAAC,EAAE;MACrB,OAAOX,GAAG,CACLO,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAA8C,CAAC,CAAC;IACzF;IAEA,MAAME,UAAU,GAAG,MAAMC,IAAI,CAACC,OAAO,CAAC;MAAEZ;IAAM,CAAC,CAAC;IAChD,IAAIU,UAAU,EAAE;MACZP,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEJ,KAAK,CAAC,CAAC,CAAC;MACvD,OAAOF,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAsB,CAAC,CAAC;IACnF;IAEA,MAAMK,IAAI,GAAG,MAAMF,IAAI,CAACG,MAAM,CAAC;MAAEf,IAAI;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IACzDE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAES,IAAI,CAAC,CAAC,CAAC;;IAEjDf,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACjBC,OAAO,EAAE,IAAI;MACbM,IAAI,EAAE;QACFE,GAAG,EAAEF,IAAI,CAACG,EAAE;QACZjB,IAAI,EAAEc,IAAI,CAACd,IAAI;QACfC,KAAK,EAAEa,IAAI,CAACb,KAAK;QACjBiB,OAAO,EAAEJ,IAAI,CAACI;MAClB,CAAC;MACDC,KAAK,EAAEC,aAAa,CAACN,IAAI,CAACE,GAAG;IACjC,CAAC,CAAC;EACN,CAAC,CAAC,OAAOK,GAAG,EAAE;IACVjB,OAAO,CAACkB,KAAK,CAAC,4BAA4B,EAAED,GAAG,CAAC,CAAC,CAAC;IAClDtB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE,cAAc;MAAEa,KAAK,EAAED,GAAG,CAACZ;IAAQ,CAAC,CAAC;EACzF;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}